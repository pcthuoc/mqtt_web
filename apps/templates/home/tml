{% extends "layouts/base.html" %}

{% block title %} Page User {% endblock %}

<!-- Specific Page CSS goes HERE  -->
{% block stylesheets %}
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<style>
    .row {
        display: flex;
        flex-wrap: wrap;
        margin-right: -10px;
        margin-left: 0;
    }

    .list-items {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .list-items .item {
        padding: 10px;
        font-size: 16px;
        cursor: pointer;
        display: flex;
        align-items: center;
    }

    .list-items .item .check-icon {
        margin-right: 8px;
    }

    .list-items .item.selected {
        background-color: #e0e0e0;
        color: #ff0000;
    }

    .edit-btn,
    .delete-btn {
        font-size: 1.2em;
        text-decoration: none;
        padding: 8px 12px;
        border-radius: 5px;
        display: inline-flex;
        align-items: center;
        transition: background-color 0.3s, color 0.3s;
    }

    .edit-btn {
        color: #08fc69;
        background-color: #dff0d8;
    }

    .edit-btn:hover {
        color: #26af5d71;
        background-color: #c1e2b3;
    }

    .delete-btn {
        color: #eb5765;
        background-color: #f2dede;
    }

    .delete-btn:hover {
        color: #b93a3a;
        background-color: #ebc7c7;
    }

    .delete-btn .btn-text {
        margin-left: 5px;
    }

    .table td {
        vertical-align: middle;
    }

    .api-key-button {
        background-color: #5a9be1;
        border: none;
        color: #fff;
        padding: 10px 20px;
        font-size: 16px;
        cursor: default;
        text-align: center;
        display: inline-block;
        user-select: text;
        pointer-events: none;
        border-radius: 0.375rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        font-weight: 500;
    }

    .api-key-button:hover {
        background-color: rgba(0, 87, 179, 0.918);
        text-decoration: none;
    }

    /* Căn chỉnh tổng thể cho modal */
    .modal-content {
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        margin: auto;
    }

    .modal-header {
        border-bottom: none;
        padding-bottom: 10px;
        text-align: center;
    }

    .modal-title {
        font-size: 24px;
        font-weight: bold;
        color: #333;
    }

    .modal-body {
        max-height: calc(100vh - 200px); /* Đặt chiều cao tối đa của modal-body */
        overflow-y: auto; /* Cho phép cuộn theo chiều dọc */
    }

    .modal-footer {
        border-top: none;
        padding: 10px 20px;
    }

    /* Định dạng nhãn (label) */
    .form-label {
        font-size: 16px;
        font-weight: 600;
        color: #666;
        margin-bottom: 5px;
        /* Giảm khoảng cách giữa nhãn và input */
        display: block;
    }

    /* Định dạng các input, select */
    .form-control,
    .form-select {
        width: 100%;
        border-radius: 8px;
        padding: 10px 15px;
        border: 1px solid #ddd;
        font-size: 14px;
        transition: border-color 0.3s ease;
        box-sizing: border-box;
        outline: none;
        /* Loại bỏ outline mặc định khi focus */
    }

    /* Loại bỏ box-shadow và outline khi focus */
    .form-control:focus,
    .form-select:focus {
        border-color: #6c63ff;
        box-shadow: none;
        /* Loại bỏ box-shadow */
        outline: none;
        /* Loại bỏ outline */
    }

    /* Khoảng cách giữa các trường */
    .mb-3 {
        margin-bottom: 10px !important;
        /* Giảm khoảng cách giữa các trường */
    }

    /* Khoảng cách giữa các option trong select */
    .form-select option {
        padding: 8px;
    }

    /* Nút bấm */
    .btn {
        border-radius: 30px;
        font-size: 14px;
        padding: 10px 20px;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

    .btn-primary {
        background-color: #6c63ff;
        color: #fff;
        border: none;
    }

    .btn-primary:hover {
        background-color: #564ed7;
        color: #fff;
    }

    .btn-secondary {
        background-color: #f8f9fa;
        color: #6c757d;
        border: none;
    }

    .btn-secondary:hover {
        background-color: #e2e6ea;
        color: #6c757d;
    }

    /* Tạo khoảng cách cho footer */
    .modal-footer .btn {
        min-width: 100px;
    }

    /* Căn chỉnh bảng */
    .table {
        border-collapse: separate;
        border-spacing: 0 10px;
    }

    .table th,
    .table td {
        text-align: center;
        vertical-align: middle;
    }

    .table thead th {
        background-color: #f1f3f5;
        color: #666;
        font-weight: 600;
    }

    .table tbody tr {
        box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s;
    }

    .table tbody tr:hover {
        transform: scale(1.01);
    }

    /* Định dạng nút đóng */
    .btn-close {
        background: transparent;
        border: none;
        font-size: 20px;
        cursor: pointer;
    }

    /* Định dạng khoảng cách bên ngoài cho modal */
    .modal-dialog {
        margin: 1.75rem auto;
    }


    input.form-control:invalid {
        background-image: none !important;
    }

    .form-control:read-only {
        background-image: none !important;
    }
    .form-control:read-only {
        background-image: none !important;
    }
    .form-control, .is-focused .form-control {
    background-image: none !important;
    /* CSS cho modal */
/* CSS cho modal */
.modal-dialog {
    max-width: 80vw; /* Đặt chiều rộng tối đa cho modal */
    max-height: 80vh; /* Đặt chiều cao tối đa cho modal */
    margin: 1.75rem auto; /* Canh giữa modal */
    overflow-y: auto; /* Cho phép cuộn theo chiều dọc nếu nội dung vượt quá */
}

.modal-body {
    max-height: 70vh; /* Đặt chiều cao tối đa cho phần nội dung modal */
    overflow-y: auto; /* Cho phép cuộn nếu nội dung quá dài */
}

.modal-content {
    overflow: hidden; /* Đảm bảo phần nội dung không tràn ra ngoài */
}


}

</style>

{% endblock stylesheets %}

{% block content %}
<div class="row">
    <div class="col-md-12">
        <!-- Phần chọn người dùng -->
        <div class="form-group">
            <label for="user-select">Chọn người dùng:</label>
            <select id="user-select" class="form-control">
                <option value="">-- Chọn --</option>
                {% for all_api_key in all_api_keys %}
                <option value="{{ all_api_key.api_key }}">{{ all_api_key.user }}</option>
                {% endfor %}
            </select>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <!-- Container sử dụng flexbox để căn chỉnh nội dung -->
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <!-- Phần tử bên trái -->
                    <span class="nav-tabs-title">User</span>
                    <!-- Phần tử bên phải -->
                    <button type="button" class="btn btn-primary btn-add-user">Add User</button>
                </div>
                <table class="table">
                    <thead class="text-primary">
                        <tr>
                            <th>ID</th>
                            <th>User</th>
                            <th>Api</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for all_api_key in all_api_keys %}
                        <tr>
                            <td>{{ forloop.counter }}</td>
                            <td>{{ all_api_key.user }}</td>
                            <td>{{ all_api_key.api_key }}</td>
                        </tr>
                        {% empty %}
                        <tr>
                            <td colspan="3">No devices available.</td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="card">

            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <!-- Phần tử bên trái -->
                    <span class="nav-tabs-title">Device</span>
                    <!-- Phần tử bên phải -->
                    <button type="button" class="btn btn-primary btn-add-device">Add Device</button>
                </div>
                <table id="devices-table" class="table">
                    <thead class="text-primary">
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Pin</th>
                            <th>Type</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for all_device in all_devices %}
                        <tr data-api-key="{{ all_device.api_key }}">
                            <td>{{ forloop.counter }}</td>
                            <td>{{ all_device.name }}</td>
                            <td>{{ all_device.pin }}</td>
                            <td>
                                {% if all_device.type == 1 %}
                                    Relay
                                {% elif all_device.type == 2 %}
                                    Sensor
                                {% elif all_device.type == 3 %}
                                    Van
                                {% endif %}
                            </td>
                            
                            <td>
                                {% if all_device.type != 3 %}
                                <a href="#" class="edit-btn" data-id="{{ all_device.id }}"
                                    data-name="{{ all_device.name }}" data-type="{{ all_device.type }}"
                                    data-pin="{{ all_device.pin }}" data-unit="{{ all_device.unit }}"
                                    data-api-key="{{ all_device.api_key.api_key }}">
                                    <i class="material-icons">edit</i>

                                </a>
                                {% endif %}
                                <a href="#" class="delete-btn"
                                    onclick="removeDevice('{{ all_device.pin }}', '{{ all_device.api_key }}')">
                                    <i class="material-icons">delete</i>

                                </a>
                            </td>
                        </tr>
                        {% empty %}
                        <tr>
                            <td colspan="5">No devices available.</td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Edit Device Modal -->
<!-- Edit Device Modal -->
<div class="modal fade" id="EditFormModalDevice" tabindex="-1" aria-labelledby="FormModalLabelEditDevice"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="FormModalLabelEditDevice">Chỉnh sửa thiết bị</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="edit-form-device" action="{% url 'device_edit' %}" method="post">
                    {% csrf_token %}
                    <input type="hidden" name="id" id="edit_device_id">
                    <input type="hidden" name="api_key" id="edit_api_key"> <!-- Thêm trường này -->
                    <div class="mb-3">
                        <label for="edit_name" class="col-form-label">Tên :</label>
                        <input type="text" class="form-control" name="name" id="edit_name" required>
                    </div>
                    <div class="mb-3">
                        <label for="edit_type" class="col-form-label">Loại thiết bị:</label>
                        <select class="form-select" name="type" id="edit_type">
                            <option value="1">Relay</option>
                            <option value="2">Cảm biến</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="edit_value" class="col-form-label">Giá trị ảo:</label>
                        <select class="form-control" name="pin" id="edit_value" required>
                            {% for i in available_pins %}
                            <option value="{{ i }}">{{ i }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="edit_unit" class="col-form-label">Đơn vị :</label>
                        <input type="text" class="form-control" name="unit" id="edit_unit" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-warning" id="submit-edit-form-device">Cập nhật</button>
            </div>
        </div>
    </div>
</div>
<!-- Add User Modal -->
<!-- Add User Modal -->
<div class="modal fade" id="AddUserModal" tabindex="-1" aria-labelledby="AddUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="AddUserModalLabel">Tạo Người Dùng Mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="add-user-form" action="{% url 'user_create' %}" method="post">
                    {% csrf_token %}
                    <div class="mb-3">
                        <label for="user_name" class="col-form-label">Tên người dùng:</label>
                        <input type="text" class="form-control" name="user_name" id="user_name" required>
                    </div>
                    <div class="mb-3">
                        <label for="user_password" class="col-form-label">Mật khẩu:</label>
                        <input type="password" class="form-control" name="user_password" id="user_password" required>
                    </div>
                    <div class="mb-3">
                        <label for="user_password_confirm" class="col-form-label">Nhập lại mật khẩu:</label>
                        <input type="password" class="form-control" name="user_password_confirm"
                            id="user_password_confirm" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="submit-add-user-form">Tạo người dùng</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Device Modal -->
<!-- Modal Form chung cho Add Device -->
<div class="modal fade" id="AddDeviceModal" tabindex="-1" aria-labelledby="AddDeviceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="AddDeviceModalLabel">Tạo Thiết Bị Mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="add-device-form" action="{% url 'device_create' %}" method="post">
                    {% csrf_token %}

                    <!-- Tên thiết bị -->
                    <div class="mb-3">
                        <label for="device_name" class="col-form-label">Tên thiết bị:</label>
                        <input type="text" class="form-control" name="name" id="device_name" required>
                    </div>
                    <!-- Chọn người dùng -->
                    <div class="mb-3">
                        <label for="device_user" class="col-form-label">Chọn người dùng:</label>
                        <select id="device_user" class="form-select" name="api">
                            <option value="">-- Chọn --</option>
                            {% for all_api_key in all_api_keys %}
                            <option value="{{ all_api_key.api_key }}">{{ all_api_key.user }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <!-- Loại thiết bị -->
                    <div class="mb-3">
                        <label for="device_type" class="col-form-label">Loại thiết bị:</label>
                        <select class="form-select" name="type" id="device_type" required>
                            <option value="" disabled selected>Chọn loại thiết bị</option>
                            <option value="1">Relay</option>
                            <option value="2">Cảm biến</option>
                            <option value="3">Van</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="device_value" class="col-form-label">Giá trị ảo:</label>
                        <select class="form-select" name="pin" id="device_value" required>
                            <option value="" disabled selected>Select a pin</option>
                            {% for pin in available_pins %}
                            <option value="{{ pin }}">{{ pin }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <!-- Thay đổi nội dung dựa trên Loại thiết bị -->
                    <div id="relay-sensor-fields">
                        <!-- Giá trị ảo -->
                        <!-- Đơn vị -->
                        <div class="mb-3">
                            <label for="device_unit" class="col-form-label">Đơn vị:</label>
                            <input type="text" class="form-control" name="unit" id="device_unit" required>
                        </div>
                    </div>

                    <!-- Chọn bơm, chế độ và thời gian chỉ hiển thị khi chọn Van -->
                    <div id="valve-fields" class="d-none">
                        <!-- Chọn bơm -->
                        <div class="mb-3">
                            <label for="relay" class="col-form-label">Chọn Bơm:</label>
                            <select class="form-select" name="relay" id="relay" required>
                                <option value="" disabled selected>Chọn Bơm</option>
                                {% for relay in relays %}
                                <option value="{{ relay.pin }}|{{ relay.name }}">{{ relay.name }}</option>
                                {% endfor %}
                            </select>
                        </div>

                        <!-- Chế độ -->
                        <div class="mb-3">
                            <label for="mode" class="col-form-label">Chế Độ:</label>
                            <select class="form-select" name="mode" id="mode" required>
                                <option value="" disabled selected>Chọn Chế Độ</option>
                                <option value="1">Chế Độ 1</option>
                                <option value="2">Chế Độ 2</option>
                                <option value="3">Chế Độ 3</option>
                                <option value="4">Chế Độ 4</option>
                            </select>
                        </div>

                        <!-- Thời gian (Duration) -->
                        <div class="mb-3">
                            <label for="duration" class="col-form-label">Thời Gian (phút):</label>
                            <input type="number" class="form-control" name="duration" id="duration" min="1" max="120" required>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="submit-add-device-form">Tạo thiết bị</button>
            </div>
        </div>
    </div>
</div>

{% endblock content %}

<!-- Specific Page JS goes HERE  -->
{% block javascripts %}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const deviceTypeSelect = document.getElementById('device_type');
        const relaySensorFields = document.getElementById('relay-sensor-fields');
        const valveFields = document.getElementById('valve-fields');

        deviceTypeSelect.addEventListener('change', function() {
            if (this.value === '3') {
                relaySensorFields.classList.add('d-none'); // Ẩn các trường của Relay/Sensor
                valveFields.classList.remove('d-none');    // Hiển thị các trường của Van
            } else {
                relaySensorFields.classList.remove('d-none'); // Hiển thị các trường của Relay/Sensor
                valveFields.classList.add('d-none');          // Ẩn các trường của Van
            }
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('add-user-form');
        const submitButton = document.getElementById('submit-add-user-form');

        if (form && submitButton) {
            submitButton.addEventListener('click', function (event) {
                event.preventDefault(); // Ngăn chặn form gửi theo cách mặc định

                const formData = new FormData(form);

                fetch(form.action, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-CSRFToken': form.querySelector('[name="csrfmiddlewaretoken"]').value
                    }
                })
                    .then(response => {
                        if (!response.ok) {
                            return response.json().then(data => {
                                throw new Error(data.message || 'Có lỗi xảy ra, vui lòng thử lại.');
                            });
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Nếu thành công, có thể thông báo và đóng modal hoặc làm mới trang
                        alert('Người dùng đã được tạo thành công.');
                        location.reload(); // Tự động làm mới trang sau khi thành công
                    })
                    .catch(error => {
                        // Hiển thị thông báo lỗi
                        alert('Có lỗi xảy ra: ' + error.message);
                    });
            });
        }
    });
</script>

<script>
    // Đảm bảo chỉ gán sự kiện một lần
    $(document).ready(function () {
        let isSubmitting = false;

        $('#submit-add-device-form').click(async function (event) {
            event.preventDefault();

            if (isSubmitting) return;

            isSubmitting = true;

            try {
                const formData = $('#add-device-form').serialize();
                await $.ajax({
                    url: $('#add-device-form').attr('action'),
                    type: 'POST',
                    data: formData
                });
                window.location.href = '/edit/';
            } catch (xhr) {
                alert('Có lỗi xảy ra: ' + (xhr.responseJSON.message || 'Vui lòng kiểm tra thông tin và thử lại.'));
            } finally {
                isSubmitting = false;
            }
        });
    });

</script>


<script>

    document.addEventListener('DOMContentLoaded', function () {
        var select = document.getElementById('device_value');
        for (var i = 0; i <= 50; i++) {
            var option = document.createElement('option');
            option.value = 'V' + i;
            option.textContent = 'V' + i;
            select.appendChild(option);
        }
    });
    document.addEventListener('DOMContentLoaded', function () {
        const userSelect = document.getElementById('user-select');
        const deviceRows = document.querySelectorAll('#devices-table tbody tr');
        const userRows = document.querySelectorAll('.col-md-5 .table tbody tr');

        userSelect.addEventListener('change', function () {
            const selectedApiKey = userSelect.value;

            // Lọc bảng thiết bị theo api_key
            deviceRows.forEach(row => {
                const rowApiKey = row.getAttribute('data-api-key');
                row.style.display = (selectedApiKey === '' || rowApiKey === selectedApiKey) ? '' : 'none';
            });

            // Lọc bảng user theo api_key
            userRows.forEach(row => {
                const rowApiKey = row.querySelector('td:nth-child(3)').textContent.trim();
                row.style.display = (selectedApiKey === '' || rowApiKey === selectedApiKey) ? '' : 'none';
            });
        });

        document.querySelectorAll('.edit-btn').forEach(button => {
            button.addEventListener('click', function () {
                // Lấy dữ liệu từ thuộc tính data-*
                const id = this.getAttribute('data-id');
                const name = this.getAttribute('data-name');
                const type = this.getAttribute('data-type');
                const pin = this.getAttribute('data-pin');
                const unit = this.getAttribute('data-unit');
                const apiKey = this.getAttribute('data-api-key'); // Lấy api_key

                // Điền dữ liệu vào form chỉnh sửa
                document.getElementById('edit_device_id').value = id;
                document.getElementById('edit_api_key').value = apiKey; // Điền giá trị api_key
                document.getElementById('edit_name').value = name;

                const valueSelect = document.getElementById('edit_value');
                valueSelect.innerHTML = ''; // Xóa các tùy chọn trước đó để làm sạch danh sách

                for (let i = 0; i <= 50; i++) {
                    const optionValue = 'V' + i;
                    const option = document.createElement('option');
                    option.value = optionValue;
                    option.text = optionValue;

                    if (optionValue === pin) {
                        option.selected = true;
                    }

                    valueSelect.add(option);
                }
                document.getElementById('edit_unit').value = unit;

                // Chọn đúng loại thiết bị
                const typeSelect = document.getElementById('edit_type');
                typeSelect.value = type;

                // Hiển thị modal chỉnh sửa
                const editFormModal = new bootstrap.Modal(document.getElementById('EditFormModalDevice'));
                editFormModal.show();
            });
        });

        document.getElementById('submit-edit-form-device').addEventListener('click', function () {
            document.getElementById('edit-form-device').submit();
        });
    });


    // Add User button click to show modal
    document.querySelector('.btn-add-user').addEventListener('click', function () {
        const addUserModal = new bootstrap.Modal(document.getElementById('AddUserModal'));
        addUserModal.show();
    });

    // Add Device button click to show modal
    document.querySelector('.btn-add-device').addEventListener('click', function () {
        const addDeviceModal = new bootstrap.Modal(document.getElementById('AddDeviceModal'));
        addDeviceModal.show();
    });
    window.removeDevice = function (pin, apiKey) {
        if (confirm('Bạn có chắc chắn muốn xóa mục này?')) {
            // Tạo URL cho yêu cầu xóa
            var url = `/delete_device/${pin}/`;

            fetch(url, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': '{{ csrf_token }}'  // Lấy token CSRF từ template
                },
                body: JSON.stringify({
                    'api_key': apiKey  // Gửi api_key nếu cần thiết
                })
            })
                .then(response => {
                    if (response.ok) {
                        // Xóa thành công
                        location.reload();  // Tải lại trang hoặc cập nhật giao diện
                    } else {
                        alert('Xóa thất bại!');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Xóa thất bại!');
                });
        }
    };


</script>
{% endblock javascripts %}